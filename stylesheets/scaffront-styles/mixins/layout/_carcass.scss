//*********************************************
//    Framework/Mixins/Layout/Carcass
//*********************************************

@import 'sassy-validation';

//<div #{$selector-container}>
//  <div #{$selector-content-container}>
//    <main #{$selector-content} role="main">
//      <!-- content here -->
//    </main>
//  </div>
//  <aside #{$selector-sidebar-left}>
//    <!-- sidebar left here -->
//  </aside>
//  <aside #{$selector-sidebar-right}>
//    <!-- sidebar right here -->
//  </aside>
//</div>
$layout-sidebars-selector-container: '.layout-middle' !default;
$layout-sidebars-selector-content-container: '.layout-content-container' !default;
$layout-sidebars-selector-content: '.layout-content' !default;
$layout-sidebars-selector-sidebar-left: '.layout-sidebar-left' !default;
$layout-sidebars-selector-sidebar-right: '.layout-sidebar-right' !default;
$layout-sidebars-sidebar-left-width: 0 !default;
$layout-sidebars-sidebar-left-gutter: 0 !default;
$layout-sidebars-sidebar-right-width: 0 !default;
$layout-sidebars-sidebar-right-gutter: 0 !default;
@mixin sf-sidebars (
  $selector-container: $layout-sidebars-selector-container,
  $selector-content-container: $layout-sidebars-selector-content-container,
  $selector-content: $layout-sidebars-selector-content,
  $selector-sidebar-left: $layout-sidebars-selector-sidebar-left,
  $selector-sidebar-right: $layout-sidebars-selector-sidebar-right,
  $sidebar-left-width: $layout-sidebars-sidebar-left-width,
  $sidebar-left-gutter: $layout-sidebars-sidebar-left-gutter,
  $sidebar-right-width: $layout-sidebars-sidebar-right-width,
  $sidebar-right-gutter: $layout-sidebars-sidebar-right-gutter
) {
  #{$selector-container} {
    @include clearfix;
  }

  #{$selector-sidebar-left},
  #{$selector-sidebar-right} {
    display: none;
  }

  @if (
    ($selector-sidebar-left != '' and type-of($sidebar-left-width) == number and $sidebar-left-width > 0) or
    ($selector-sidebar-right != '' and type-of($sidebar-right-width) == number and $sidebar-right-width > 0)
  ) {
    $content-padding-left: 0;
    $content-padding-right: 0;

    @if ($sidebar-left-width > 0) {
      @if (type-of($sidebar-left-gutter) != number) {
        $sidebar-left-gutter: 0;
      }
      $content-padding-left: $sidebar-left-width + $sidebar-left-gutter;

      #{$selector-sidebar-left} {
        display: block;
        float: left;
        margin-left: -100%;
        position: relative;
        width: $sidebar-left-width;
      }
    }

    @if ($sidebar-right-width > 0) {
      @if (type-of($sidebar-right-gutter) != number) {
        $sidebar-right-gutter: 0;
      }
      $content-padding-right: $sidebar-right-width + $sidebar-right-gutter;

      #{$selector-sidebar-right} {
        display: block;
        float: left;
        margin-left: -$sidebar-right-width;
        position: relative;
        width: $sidebar-right-width;
      }
    }

    #{$selector-content-container} {
      float: left;
      overflow: hidden;
      width: 100%;
    }

    #{$selector-content} {
      padding-right: $content-padding-right;
      padding-left: $content-padding-left;
    }
  }
}


//<body>
//  <div #{$selector-container}>
//    <div #{$selector-content}>
//      <!-- content here -->
//    </div>
//  </div>
//  <footer #{$selector-footer}>
//    <!-- footer here -->
//  </footer>
//</body>
$layout-sticky-footer-height: 100px !default;
$layout-sticky-footer-selector-container: '.layout' !default;
$layout-sticky-footer-selector-content: '.layout-middle' !default;
$layout-sticky-footer-selector-footer: '.layout-footer' !default;
@mixin sf-sticky-footer (
  $height: 100px,
  $selector-container: '.layout',
  $selector-content: '.layout-middle',
  $selector-footer: '.layout-footer'
) {
  @if (type-of($height) == number and $height > 0) {
    @at-root {
      html, body {
        height: 100%;
      }
    }

    #{unquote($selector-container)} {
      margin: 0;
      width: 100%;
      min-height: 100%;
      height: auto !important;
      height: 100%;
    }

    #{unquote($selector-content)} {
      padding-bottom: $height;
    }

    #{unquote($selector-footer)} {
      margin-top: -$height;
      height: $height;
      position: relative;
      //overflow: hidden;
    }
  }
}


//<body>
//  <div #{$selector-container}>
//    <div>
//      <!-- content here -->
//    </div>
//    <footer #{$selector-footer}>
//      <!-- footer here -->
//    </footer>
//  </div>
//</body>
@mixin sf-sticky-footer-fluid (
  $selector-container: null,
  $selector-footer: '.layout__footer'
) {
  @at-root {
    html,
    body {
      height: 100%;
      margin: 0;
      padding: 0;
    }

    @if (not is-null($selector-container) and not is-empty($selector-container)) {
      #{$selector-container} {
        display: table;
        height: 100%;
        width: 100%;
      }
    }

    #{$selector-footer} {
      display: table-row;
      height: 1px;
    }
  }

  @if (is-null($selector-container) or is-empty($selector-container)) {
    display: table;
    height: 100%;
    width: 100%;
  }
}

@mixin sf-auto-columns-aside ($position, $gutter: 0, $gutter-style: 'margin') {
  $direction: unquote($position);
  $gutter-style: unquote($gutter-style);

  float: $direction;
  #{$gutter-style}-#{opposite-position($direction)}: $gutter;
}

@mixin sf-auto-columns-content () {
  overflow: hidden;
  display: block;
}

@mixin sf-auto-columns (
  $selector-content,
  $selector-aside-left,
  $selector-aside-right,
  $gutter: 0,
  $gutter-style: 'margin'
) {
  @include sf-clearfix;

  $selector-content: unquote($selector-content);
  $selector-aside-left: unquote($selector-aside-left);
  $selector-aside-right: unquote($selector-aside-right);

  @if ($selector-content) {
    & > #{$selector-content} {
      @include sf-auto-columns-content();
    }
  }

  @if ($selector-aside-left) {
    & > #{$selector-aside-left} {
      @include sf-auto-columns-aside($position: left, $gutter: $gutter, $gutter-style: $gutter-style);
    }
  }
  @if ($selector-aside-right) {
    & > #{$selector-aside-right} {
      @include sf-auto-columns-aside($position: right, $gutter: $gutter, $gutter-style: $gutter-style);
    }
  }
}

@mixin sf-auto-columns-aside ($position, $gutter: 0, $gutter-style: 'margin') {
  $direction: unquote($position);
  $gutter-style: unquote($gutter-style);

  float: $direction;
  #{$gutter-style}-#{opposite-position($direction)}: $gutter;
}

@mixin sf-auto-columns-content () {
  overflow: hidden;
  display: block;
}

@mixin sf-auto-columns (
  $selector-content,
  $selector-aside-left,
  $selector-aside-right,
  $gutter: 0,
  $gutter-style: 'margin'
) {
  @include sf-clearfix;

  $selector-content: unquote($selector-content);
  $selector-aside-left: unquote($selector-aside-left);
  $selector-aside-right: unquote($selector-aside-right);

  @if ($selector-content) {
    & > #{$selector-content} {
      @include sf-auto-columns-content();
    }
  }

  @if ($selector-aside-left) {
    & > #{$selector-aside-left} {
      @include sf-auto-columns-aside($position: left, $gutter: $gutter, $gutter-style: $gutter-style);
    }
  }
  @if ($selector-aside-right) {
    & > #{$selector-aside-right} {
      @include sf-auto-columns-aside($position: right, $gutter: $gutter, $gutter-style: $gutter-style);
    }
  }
}

/**
 * http://jsfiddle.net/alexriz/d5SUg/
 */
@mixin _sf-columns-auto-fix () {
  -height: 1%; /*IE6*/
  *zoom: 1; /*IE6-7*/
  display: table;

  &:after {
    /*content: '1 1';*/
    /*Op15+*/
    content: '1 1 1 1 1 1 1 1 1 1 1'; /*Op12+*/
    font: .1px/0 a;
    display: block;
    word-spacing: 99in;
    overflow: hidden; /*IE8-*/
  }
}

@mixin sf-asides (
  $selector-aside-left: '.asides__left',
  $selector-aside-right: '.asides__right',
  $selector-aside-center: '.asides__center',
  $gutter: 0
) {
  $aside-left:    unquote($selector-aside-left);
  $aside-right:   unquote($selector-aside-right);
  $aside-center:  unquote($selector-aside-center);

  $aside-center: if($aside-center and not is-empty($aside-center),  $aside-center,  null);
  $aside-left:   if($aside-left   and not is-empty($aside-left),    $aside-left,    null);
  $aside-right:  if($aside-right  and not is-empty($aside-right),   $aside-right,   null);

  & {
    @include _sf-columns-auto-fix;
  }

  @if (not is-null($aside-center)) {
    #{$aside-center} {
      @include _sf-columns-auto-fix;
    }
  }

  @if (not is-null($aside-left) or not is-null($aside-right)) {
    $gutter: if(is-measure($gutter), $gutter, 0);
    $gutter: sf-assign-defaults(left right, $gutter, (left: $gutter, right: $gutter));

    @if (not is-null($aside-left)) {
      #{$aside-left} {
        float: left;
        margin-right: map-get($gutter, right);
      }
    }

    @if (not is-null($aside-right)) {
      #{$aside-right} {
        float: right;
        margin-left: map-get($gutter, left);
      }
    }
  }
}


//$layout-width-min: 960px !default;
//$layout-width-max: 1200px !default;
//$layout-width-side-space: 50px !default;
//$layout-width-side-space-type: padding !default; // or "margin"
//@mixin sf-layout-width-min (
//  $width: $layout-width-min,
//  $side-space: $layout-width-side-space,
//  $side-space-type: $layout-width-side-space-type
//) {
//  $side-space_: strip-units($side-space);
//  $side-space: if(is-number($side-space_) and $side-space_ > 0, $side-space_, null);
//
//  $width_: strip-units($width);
//  $width: if(is-number($width_) and $width_ > 0, $width_, null);
//
//  $side-space-type: unquote($side-space-type);
//
//  @if (not is-null($width)) {
//    margin-left: auto;
//    margin-right: auto;
//
//    $min-width: $width;
//    @if (not is-null($side-space)) {
//      $side-space-type: unquote($side-space-type);
//
//      @if ($side-space-type != padding) {
//        $side-space-type: margin;
//        $min-width: $width - $side-space*2;
//      }
//
//      #{$side-space-type}-left: $side-space;
//      #{$side-space-type}-right: $side-space;
//    }
//
//    min-width: $min-width;
//  }
//}
//
//@mixin sf-layout-width-max (
//  $width: $layout-width-max,
//  $side-space: $layout-width-side-space,
//  $side-space-type: $layout-width-side-space-type
//) {
//  $side-space_: strip-units($side-space);
//  $side-space: if(is-number($side-space_) and $side-space_ > 0, $side-space_, null);
//
//  $width_: strip-units($width);
//  $width: if(is-number($width_) and $width_ > 0, $width_, null);
//
//  $side-space-type: unquote($side-space-type);
//
//  @if (not is-null($width)) {
//    margin-left: auto;
//    margin-right: auto;
//
//    $max-width: $width;
//    @if (not is-null($side-space)) {
//      $side-space-type: unquote($side-space-type);
//
//      @if ($side-space-type != padding) {
//        $side-space-type: margin;
//        $max-width: $width - $side-space*2;
//      }
//
//      #{$side-space-type}-left: $side-space;
//      #{$side-space-type}-right: $side-space;
//    }
//
//    max-width: $max-width;
//  }
//}
//
//@mixin sf-layout-width (
//  $min: 1000px,
//  $max: 1400px,
//  $side-space: 50px,
//  $side-space-type: padding
//) {
//
//  @include sf-layout-width-min (
//    $width: $min,
//    $side-space: $side-space,
//    $side-space-type: $side-space-type
//  );
//
//  @include sf-layout-width-max (
//    $width: $max,
//    $side-space: $side-space,
//    $side-space-type: $side-space-type
//  );
//}
//

