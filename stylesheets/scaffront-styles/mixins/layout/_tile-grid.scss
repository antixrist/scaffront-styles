//*********************************************
//    Framework/Mixins/Layout/Tile grid
//*********************************************

@import 'singularity';

$tile-grid-count-in-row: 0 !default;
$tile-grid-gutter: 0 !default;
$tile-grid-gutter-horizontal: $tile-grid-gutter !default;
$tile-grid-gutter-vertical: $tile-grid-gutter !default;
$tile-grid-layout: $tile-grid-count-in-row !default;

@mixin sf-grid-columns (
  $count-in-row: $tile-grid-count-in-row,
  $gutter: $tile-grid-gutter,
  $gutter-horizontal: $tile-grid-gutter-horizontal,
  $gutter-vertical: $tile-grid-gutter-vertical,
  $selector: '> *'
) {
  $selector: unquote($selector);

  @if ($count-in-row != 0) {
    #{$selector} {
      margin-top: $gutter-vertical;
      padding-left: $gutter-horizontal;

      &:nth-child(n+1):nth-child(-n+#{$count-in-row}) {
        margin-top: 0;
      }

      @for $index from 1 through $count-in-row {
        @if $index == 1 {
          &:nth-child(#{$count-in-row}n+#{$index}) {
            @include isolation-span(1, $index, left);
          }
        }
        @else if $index < $count-in-row {
          &:nth-child(#{$count-in-row}n+#{$index}) {
            @include isolation-span(1, $index, none);
          }
        }
        @else {
          &:nth-child(#{$count-in-row}n+#{$index}) {
            @include isolation-span(1, $index, right);
          }
        }
      }
    }
  }
}

@mixin sf-grid (
  $count-in-row: $tile-grid-count-in-row,
  $gutter: $tile-grid-gutter,
  $gutter-horizontal: $tile-grid-gutter-horizontal,
  $gutter-vertical: $tile-grid-gutter-vertical,
  $selector: '> *',
  $layout: $tile-grid-layout
) {
  $selector: unquote($selector);

  @if ($count-in-row != 0) {
    @include sf-clearfix;
    @include add-grid($layout);
    @include add-gutter(0);

    margin-left: -$gutter-horizontal;

    @if ($selector != '') {
      @include sf-grid-columns (
        $count: $count-in-row,
        $gutter: $gutter,
        $gutter-horizontal: $gutter,
        $gutter-vertical: $gutter,
        $selector: $selector
      );
    }
  }

  @content;
}
