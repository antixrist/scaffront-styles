//*********************************************
//    Framework/Mixins/Content/Snippets
//*********************************************

@import 'compass';

@mixin sf-opacity-states (
  $normal: .8,
  $hover: 1,
  $active: .5,
  $transition: opacity .2s ease-out
) {
  opacity: $normal;

  @if ($transition) {
    transition: $transition;
  }

  #{$is-hovered},
  #{$is-focused} {
    opacity: $hover;
  }
  #{$is-active} {
    opacity: $active;
  }
}

@mixin sf-opacity-list (
  $child-selector: '> *',
  $opacity: .5,
  $transition: opacity .2s ease-out
) {
  $child-selector: unquote($child-selector);
  @if ($transition) {
    #{$child-selector} {
      transition: $transition;
    }
  }
  #{$is-hovered} {

    #{$child-selector} {
      opacity: $opacity;

      #{$is-hovered} {
        opacity: 1;
      }
    }
  }
}


@mixin sf-preview (
  $image: '',
  $image-hidpi: '',
  $image-inline: true,
  $opacity-normal: .8,
  $opacity-hover: 1,
  $opacity-active: .7,
  $opacity-transition: opacity .2s ease-out
) {
  position: relative;
  display: inline-block;
  border: none;
  text-decoration: none;
  max-width: 100%;

  img {
    max-width: 100%;
    height: auto;
  }

  &:after {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    z-index: 2;

    @include sf-opacity-states($normal: $opacity-normal, $hover: $opacity-hover, $active: $opacity-active, $transition: $opacity-transition);

    @if ($image) {
      @include bg-image($image: $image, $inline: $image-inline);

      @if ($image-hidpi and mixin-exists(breakpoint)) {
        @include breakpoint(min-resolution 1.5dppx) {
          @include bg-image($image: $image-hidpi, $factor: 2, $inline: $image-inline);
        }
      }
    }
  }
}

@mixin sf-arrow-block-arrow ($direction, $size, $color) {
  $direction: unquote($direction);

  padding: 0;

  // horizontal
  @if ($direction == left or $direction == right) {
    padding-#{$direction}: $size;

    &:before,
    &:after {
      width: $size;
      height: 50%;
      top: auto;
      right: auto;
      bottom: auto;
      left: auto;
      #{$direction}: 0;
    }
    &:before {
      top: 0;
      background: linear-gradient(to $direction top, $color 50%, transparent 50%);
    }
    &:after {
      top: 50%;
      background: linear-gradient(to $direction bottom, $color 50%, transparent 50%);
    }
  }

  // vertical
  @if ($direction == top or $direction == bottom) {
    padding-#{$direction}: $size;

    &:before,
    &:after {
      height: $size;
      width: 50%;
      top: auto;
      right: auto;
      bottom: auto;
      left: auto;
      #{$direction}: 0;
    }

    &:before {
      left: 0;
      background: linear-gradient(to left $direction, $color 50%, transparent 50%);
    }

    &:after {
      left: 50%;
      background: linear-gradient(to right $direction, $color 50%, transparent 50%);
    }
  }

  .no-cssgradients & {
    padding: 0;
  }
}

@mixin sf-arrow-block ($direction, $arrow-size, $color, $content-selector: '> *') {
  position: relative;

  &:before,
  &:after {
    content: '';
    position: absolute;
  }

  @if ($direction) {
    @include sf-arrow-block-arrow($direction: $direction, $arrow-size: $arrow-size, $color: $color);
  }

  @if ($content-selector) {
    #{$content-selector} {
      background: $color;

      @content;
    }
  }

}






