//*********************************************
//    Framework/Mixins/Content/Links
//*********************************************

$base-font-size:    14px !default;
$base-line-height:  24px !default;

$is-hovered:  unquote('&:hover, &.is-hovered') !default;
$is-focused:  unquote('&:focus, &.is-focused') !default;
$is-active:   unquote('&:active, &.is-active') !default;
$is-visited:  unquote('&:visited, &.is-visited') !default;
$is-required: unquote('&.is-required, &[required]') !default;
$is-disabled: unquote('&.is-disabled, &[disabled], fieldset[disabled] &') !default;
$is-error:    unquote('&.is-error') !default;
$is-success:  unquote('&.is-success') !default;

@mixin link (
  $color-normal,
  $color-hover: null,
  $color-focus: null,
  $color-active: null,
  $color-visited: null,
  $border-color-normal: null,
  $border-color-hover: null,
  $border-color-focus: null,
  $border-color-active: null,
  $border-color-visited: null,
  $border-width-normal: null,
  $border-width-hover: null,
  $border-width-focus: null,
  $border-width-active: null,
  $border-width-visited: null,
  $transition: null
) {
  // Defaults
  @if ($color-hover == null) {
    //$color-hover: darken($color-normal, 20%);
    $color-hover: $color-normal;
  }
  @if ($color-focus == null) {
    $color-focus: $color-hover;
  }
  @if ($color-active == null) {
    $color-active: #ff0000;
  }
  @if ($color-visited == null) {
    $color-visited: $color-normal;
  }

  @if ($border-color-normal == null) {
    $border-color-normal: rgba($color-normal, .6);
  }

  @if ($border-color-hover == null) {
    $border-color-hover: $color-hover;
  }
  @if ($border-color-focus == null) {
    $border-color-focus: $color-focus;
  }
  @if ($border-color-active == null) {
    $border-color-active: $color-active;
  }
  @if ($border-color-visited == null) {
    $border-color-visited: $color-visited;
  }

  @if ($border-width-normal == null) {
    $border-width-normal: 0 0 1px 0;
  }
  @if ($border-width-hover == null) {
    $border-width-hover: $border-width-normal;
  }
  @if ($border-width-focus == null) {
    $border-width-focus: $border-width-normal;
  }
  @if ($border-width-active == null) {
    $border-width-active: $border-width-normal;
  }
  @if ($border-width-visited == null) {
    $border-width-visited: $border-width-normal;
  }

  @if ($transition == null) {
    $transition: .2s ease-out;
  }

  cursor: pointer;
  text-decoration : none;
  border-style: solid;

  @if ($transition) {
    transition: color $transition, border-width $transition, border-color $transition;
  }


  @include link-colors($color-normal, $color-hover, $color-active, $color-visited, $color-focus);

  border-color: $border-color-normal;
  border-width: $border-width-normal;

  #{$is-visited} {
    color: $color-visited;
    border-color: $border-color-visited;
    border-width: $border-width-visited;
  }
  #{$is-hovered} {
    color: $color-hover;
    border-color: $border-color-hover;
    border-width: $border-width-hover;

    #{$is-focused} {
      @include sf-unfocus();

      color: $color-hover;
      border-color: $border-color-hover;
      border-width: $border-width-hover;
    }
  }
  #{$is-focused} {
    @include sf-focus();

    color: $color-focus;
    border-color: $border-color-focus;
    border-width: $border-width-focus;
  }
  #{$is-active} {
    color: $color-active;
    border-color: $border-color-active;
    border-width: $border-width-active;

    #{$is-focused} {
      @include sf-unfocus();

      color: $color-active;
      border-color: $border-color-active;
      border-width: $border-width-active;
    }

    // #{$hovered} {
    //  border-color: $border-normal-color;
    // }
  }

  .no-rgba & {
    border: none;
    text-decoration: underline;
  }
};

@mixin link--pseudo () {
  border-style: dashed;
}
