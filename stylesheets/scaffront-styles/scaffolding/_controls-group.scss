@if ($controls-group != '') {
  #{$controls-group} {
    @include clearfix;

    position: relative;
    display: inline-block;
    vertical-align: middle;
  }

  $items-selector: ();
  @if ($btn) {
    $items-selector: join($items-selector, to-list($btn));
  }
  @if ($input) {
    $items-selector: join($items-selector, to-list($input));
  }

  #{$controls-group} {
    #{implode(', ', $items-selector)} {
      float: left;
      position: relative;

      &:first-child {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
      }
      &:last-child {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
      }
      &:not(:first-child):not(:last-child) {
        border-radius: 0;
      }
    }
  }

  $variants: ();

  @each $selector in trim(to-list($controls-group-items, ',')) {
    $variants: map-merge($variants, ($selector: $controls-group-items-offset));
  }

  @each $name, $btn-size in $btn-sizes {
    $selectors: map-get($btn-size, 'selector');
    $border-width: nth(map-get($btn-size, 'options'), 4);
    $offset: #{get-dimension(right, $border-width)};

    @each $selector in trim(to-list($selectors, ',')) {
      $variants: map-merge($variants, ($selector: -$offset));
    }
  }

  @each $name, $input-size in $input-sizes {
    $selectors: map-get($input-size, 'selector');
    $border-width: nth(map-get($input-size, 'options'), 4);
    $offset: #{get-dimension(right, $border-width)};

    @each $selector in trim(to-list($selectors, ',')) {
      $variants: map-merge($variants, ($selector: -$offset));
    }
  }

  $containers: trim(to-list($controls-group, ','));
  @each $container in $containers {
    @each $variant, $offset in $variants {
      @each $variant2, $offset2 in $variants {
        #{$container} #{$variant} + #{$variant2} {
          margin-left: $offset;
        }
      }

      #{$container} #{$variant} + #{$container},
      #{$container} #{$container} + #{$variant},
      #{$container} #{$container} + #{$container} {
        margin-left: $offset;
      }
    }
  }
}
